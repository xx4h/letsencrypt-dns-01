#!/usr/bin/php
<?php

require "helpers";

try {
    //* Login to the remote server
    if($session_id = $client->login($username, $password)) {
        msg('Logged into remote server sucessfully. The SessionID is '.$session_id);
        $domain_array = explode('.', $certbot_domain);
        $domain_reverted_array = new ArrayIterator(array_reverse($domain_array));
        foreach ($domain_reverted_array as $domain_part) {
            $domain_only = $domain_part . "." . $domain_only;
            msg("Trying to find domain with origin: ".$domain_only);
            $zone = $client->dns_zone_get($session_id, array('origin' => $domain_only));
            $errors = array_filter($zone);

            if (!empty($zone)) { break; } else { msg($domain_only." existiert nicht. Weiter."); }
        }
        if (!empty($zone)) {
            msg("Zone ist: ".$zone[0]['origin']);
        } else {
            msg("Keine passende Zone gefunden! Breche Ab.");
            exit(1);
        }
        msg("Trying to find :".implode('.', $domain_array));
        $dns_entry = $client->dns_txt_get($session_id, array('name' => "_acme-challenge.".$certbot_domain."."));
        if ($dns_entry[0]) {
            msg("Entry already existing: ".print_r($dns_entry, true).", This does not work correctly, please remove it.");
            exit(1);
        } else {
            $dns_entry = Array(
                //"id" => 84,
                //"sys_userid" => 1,
                //"sys_groupid" => 0,
                //"sys_perm_user" => "riud",
                //"sys_perm_group" => "riud",
                //"sys_perm_other" => "",
                //"server_id" => 1,
                "zone" => $zone[0]['id'],
                "name" => "_acme-challenge.".$certbot_domain.".",
                "type" => "TXT",
                "data" => $certbot_validation,
                "ttl" => 60,
                "active" => "Y"
            );
            msg("Adding following $certbot_validation to Entry: ".print_r($dns_entry, true));
	    $client->dns_txt_add($session_id, 0, $dns_entry);
	    $needs_zone_update = true;
	}

	if ($needs_zone_update) {
            $zone = $client->dns_zone_get($session_id, array('origin' => $zone[0]['origin']));
            $zone[0]['serial'] = $zone[0]['serial'] + 1;
            $updated_zone = $client->dns_zone_update($session_id, 0, $zone[0]['id'], $zone[0]);

            // wait until ispconfig does have updated it's configuration
            sleep(60);
	}

        //* Logout
        if($client->logout($session_id)) {
                msg("Logout done");
        }
    }
} catch (SoapFault $e) {
        msg('SOAP Error: '.$e->getMessage());
        die("Please contact the server administator\n");
}


?>
